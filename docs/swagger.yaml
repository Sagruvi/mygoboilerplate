basePath: /api/address
definitions:
  geolocation.GeocodeRequest:
    properties:
      lat:
        type: number
      lon:
        type: number
    type: object
  geolocation.SearchRequest:
    properties:
      query:
        type: string
    type: object
host: localhost:8080/
info:
  contact:
    email: 6z6o8@example.com
    name: API Support
    url: https://github.com/go-chi/chi/issues
  description: This is a sample server geolocation service.
  title: Dadata API Proxy
  version: "1.0"
paths:
  /geocode:
    post:
      consumes:
      - application/json
      description: Search for address suggestions by latitude and longitude
      parameters:
      - description: Lat and Lon
        in: body
        name: lat
        required: true
        schema:
          $ref: '#/definitions/geolocation.GeocodeRequest'
      - description: Authorization token
        in: header
        name: Authorization
        required: true
        type: string
      - description: API Private token
        in: header
        name: X-Secret
        required: true
        type: string
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "404":
          description: Not found
        "500":
          description: Internal server error
      summary: Search for address suggestions
      tags:
      - addresses
  /login:
    get:
      consumes:
      - application/json
      description: login users using JWT tokens
      parameters:
      - description: Username
        in: query
        name: username
        required: true
        type: string
      - description: Password
        in: query
        name: password
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: valid JWT token
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "500":
          description: error creating token
          schema:
            type: string
      summary: login users
      tags:
      - auth
  /register:
    get:
      consumes:
      - application/json
      description: Register users using JWT tokens
      parameters:
      - description: Username
        in: query
        name: username
        required: true
        type: string
      - description: Password
        in: query
        name: password
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: entity is registered
          schema:
            type: string
        "401":
          description: error taking a claims
          schema:
            type: string
        "500":
          description: error hashing password
          schema:
            type: string
      summary: register users
      tags:
      - auth
  /search:
    post:
      consumes:
      - application/json
      description: Search for latitude and longitude by address
      parameters:
      - description: Address
        in: body
        name: lat
        required: true
        schema:
          $ref: '#/definitions/geolocation.SearchRequest'
      - description: Authorization token
        in: header
        name: Authorization
        required: true
        type: string
      - description: API Private token
        in: header
        name: X-Secret
        required: true
        type: string
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "404":
          description: Not found
        "500":
          description: Internal server error
      summary: Search for address
      tags:
      - addresses
swagger: "2.0"
